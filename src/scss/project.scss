@use "mixins.scss";
@use "placeholders.scss";
@use "variables" as *; // Importe toutes les variables

.project {
  width: 20rem;
  aspect-ratio: 2/3;
  background-color: $background-color;
  border: 1px inset white;
  border-radius: 15px;
  transition: transform 0.3s ease;
  z-index: 2;

  &:hover {
    transform: translateY(-5px);
  }
  .image-container {
    height: 45%;
    border-radius: 15px 15px 0 0;
    overflow: hidden;
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .infos {
    padding: 0 0.5rem;
    height: 55%;
    display: flex;
    flex-direction: column;
    .first-line {
      height: 20%;

      font-size: medium;
      font-weight: bold;
      display: flex;

      .name {
        flex: 1;
        text-align: left;
        display: flex;
        align-items: center;
        margin-left: 0.5rem;
      }
      .discover {
        flex: 1;
        display: flex;
        justify-content: flex-end;
        margin-right: 0.5rem;
        align-items: center;
        text-align: end;
        text-decoration: underline;

        a {
          display: flex;
          align-items: center;
        }

        &:hover {
          svg {
            transform: translateX(10px);
          }
        }

        svg {
          transition: transform 0.3s ease-in-out;
        }
      }
    }

    .description {
      height: 35%;
      color: lightgray;
      padding: 0.5rem;
    }
    .stack {
      display: flex;
      padding: 0.5rem;
      flex-wrap: wrap;
      gap: 0.25rem;
      flex: 1 auto;

      * {
        padding: 0.25rem;
        background-color: whitesmoke;
        border-radius: 0.25rem;
        color: black;
        height: auto;
      }
    }
    .icons-link {
      gap: 0.25rem;
      display: flex;
      width: fit-content;
      align-self: end;
      margin: 0 0.25rem 0.25rem 0;
      // This creates a parent context for the hover effect
      &:hover .icon-container {
        filter: brightness(0.5);
      }

      .icon-container {
        position: relative;

        // This resets the filter for the specific hovered element
        &:hover {
          filter: brightness(1);
          cursor: pointer;
        }

        &:hover .tooltip {
          display: block;
        }
      }
    }
  }
}
